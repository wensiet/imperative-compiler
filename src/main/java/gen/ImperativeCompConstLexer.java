// Generated from /Users/wensiet/IdeaProjects/imperative-compiler/src/main/antlr4/ImperativeCompConst.g4 by ANTLR 4.13.2
package gen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class ImperativeCompConstLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		SEMICOLON=1, VARSYM=2, COLON=3, INT_TYPE=4, REAL_TYPE=5, BOOL_TYPE=6, 
		RECORD_TYPE=7, ARRAY_TYPE=8, TYPESYM=9, ISSYM=10, ROUTINESYM=11, ENDSYM=12, 
		LPAREN=13, RPAREN=14, LBRACKET=15, RBRACKET=16, LBRACE=17, RBRACE=18, 
		COMMA=19, WHILESYM=20, FORSYM=21, FOREACHSYM=22, FROMSYM=23, LOOPSYM=24, 
		INSYM=25, RANGE=26, IFSYM=27, THENSYM=28, ELSESYM=29, AND=30, OR=31, XOR=32, 
		LSS=33, LEQ=34, GTR=35, GEQ=36, EQL=37, NEQ=38, PLUS=39, MINUS=40, TIMES=41, 
		SLASH=42, PERCENT=43, PERIOD=44, BECOMES=45, TRUE=46, FALSE=47, RETURNSYM=48, 
		REVERSESYM=49, IDENT=50, INT=51, REAL=52, WS=53;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"SEMICOLON", "VARSYM", "COLON", "INT_TYPE", "REAL_TYPE", "BOOL_TYPE", 
			"RECORD_TYPE", "ARRAY_TYPE", "TYPESYM", "ISSYM", "ROUTINESYM", "ENDSYM", 
			"LPAREN", "RPAREN", "LBRACKET", "RBRACKET", "LBRACE", "RBRACE", "COMMA", 
			"WHILESYM", "FORSYM", "FOREACHSYM", "FROMSYM", "LOOPSYM", "INSYM", "RANGE", 
			"IFSYM", "THENSYM", "ELSESYM", "AND", "OR", "XOR", "LSS", "LEQ", "GTR", 
			"GEQ", "EQL", "NEQ", "PLUS", "MINUS", "TIMES", "SLASH", "PERCENT", "PERIOD", 
			"BECOMES", "TRUE", "FALSE", "RETURNSYM", "REVERSESYM", "IDENT", "INT", 
			"REAL", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'var'", "':'", "'integer'", "'real'", "'boolean'", "'record'", 
			"'array'", "'type'", "'is'", "'routine'", "'end'", "'('", "')'", "'['", 
			"']'", "'{'", "'}'", "','", "'while'", "'for'", "'foreach'", "'from'", 
			"'loop'", "'in'", "'..'", "'if'", "'then'", "'else'", "'and'", "'or'", 
			"'xor'", "'<'", "'<='", "'>'", "'>='", "'='", "'/='", "'+'", "'-'", "'*'", 
			"'/'", "'%'", "'.'", "':='", "'true'", "'false'", "'return'", "'reverse'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "SEMICOLON", "VARSYM", "COLON", "INT_TYPE", "REAL_TYPE", "BOOL_TYPE", 
			"RECORD_TYPE", "ARRAY_TYPE", "TYPESYM", "ISSYM", "ROUTINESYM", "ENDSYM", 
			"LPAREN", "RPAREN", "LBRACKET", "RBRACKET", "LBRACE", "RBRACE", "COMMA", 
			"WHILESYM", "FORSYM", "FOREACHSYM", "FROMSYM", "LOOPSYM", "INSYM", "RANGE", 
			"IFSYM", "THENSYM", "ELSESYM", "AND", "OR", "XOR", "LSS", "LEQ", "GTR", 
			"GEQ", "EQL", "NEQ", "PLUS", "MINUS", "TIMES", "SLASH", "PERCENT", "PERIOD", 
			"BECOMES", "TRUE", "FALSE", "RETURNSYM", "REVERSESYM", "IDENT", "INT", 
			"REAL", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ImperativeCompConstLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ImperativeCompConst.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u00005\u0147\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016"+
		"\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017"+
		"\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b"+
		"\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e"+
		"\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f"+
		"\u0001 \u0001 \u0001!\u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001"+
		"#\u0001$\u0001$\u0001%\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001"+
		"(\u0001(\u0001)\u0001)\u0001*\u0001*\u0001+\u0001+\u0001,\u0001,\u0001"+
		",\u0001-\u0001-\u0001-\u0001-\u0001-\u0001.\u0001.\u0001.\u0001.\u0001"+
		".\u0001.\u0001/\u0001/\u0001/\u0001/\u0001/\u0001/\u0001/\u00010\u0001"+
		"0\u00010\u00010\u00010\u00010\u00010\u00010\u00011\u00011\u00051\u012c"+
		"\b1\n1\f1\u012f\t1\u00012\u00042\u0132\b2\u000b2\f2\u0133\u00013\u0004"+
		"3\u0137\b3\u000b3\f3\u0138\u00013\u00013\u00043\u013d\b3\u000b3\f3\u013e"+
		"\u00014\u00044\u0142\b4\u000b4\f4\u0143\u00014\u00014\u0000\u00005\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/"+
		"\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K"+
		"&M\'O(Q)S*U+W,Y-[.]/_0a1c2e3g4i5\u0001\u0000\u0005\u0002\u0000AZaz\u0004"+
		"\u000009AZ__az\u0001\u000009\u0001\u0000..\u0003\u0000\t\n\r\r  \u014b"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000="+
		"\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000"+
		"\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000"+
		"\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K"+
		"\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000"+
		"\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000"+
		"\u0000U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000Y"+
		"\u0001\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000]\u0001\u0000"+
		"\u0000\u0000\u0000_\u0001\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\u0000"+
		"\u0000c\u0001\u0000\u0000\u0000\u0000e\u0001\u0000\u0000\u0000\u0000g"+
		"\u0001\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000\u0001k\u0001\u0000"+
		"\u0000\u0000\u0003m\u0001\u0000\u0000\u0000\u0005q\u0001\u0000\u0000\u0000"+
		"\u0007s\u0001\u0000\u0000\u0000\t{\u0001\u0000\u0000\u0000\u000b\u0080"+
		"\u0001\u0000\u0000\u0000\r\u0088\u0001\u0000\u0000\u0000\u000f\u008f\u0001"+
		"\u0000\u0000\u0000\u0011\u0095\u0001\u0000\u0000\u0000\u0013\u009a\u0001"+
		"\u0000\u0000\u0000\u0015\u009d\u0001\u0000\u0000\u0000\u0017\u00a5\u0001"+
		"\u0000\u0000\u0000\u0019\u00a9\u0001\u0000\u0000\u0000\u001b\u00ab\u0001"+
		"\u0000\u0000\u0000\u001d\u00ad\u0001\u0000\u0000\u0000\u001f\u00af\u0001"+
		"\u0000\u0000\u0000!\u00b1\u0001\u0000\u0000\u0000#\u00b3\u0001\u0000\u0000"+
		"\u0000%\u00b5\u0001\u0000\u0000\u0000\'\u00b7\u0001\u0000\u0000\u0000"+
		")\u00bd\u0001\u0000\u0000\u0000+\u00c1\u0001\u0000\u0000\u0000-\u00c9"+
		"\u0001\u0000\u0000\u0000/\u00ce\u0001\u0000\u0000\u00001\u00d3\u0001\u0000"+
		"\u0000\u00003\u00d6\u0001\u0000\u0000\u00005\u00d9\u0001\u0000\u0000\u0000"+
		"7\u00dc\u0001\u0000\u0000\u00009\u00e1\u0001\u0000\u0000\u0000;\u00e6"+
		"\u0001\u0000\u0000\u0000=\u00ea\u0001\u0000\u0000\u0000?\u00ed\u0001\u0000"+
		"\u0000\u0000A\u00f1\u0001\u0000\u0000\u0000C\u00f3\u0001\u0000\u0000\u0000"+
		"E\u00f6\u0001\u0000\u0000\u0000G\u00f8\u0001\u0000\u0000\u0000I\u00fb"+
		"\u0001\u0000\u0000\u0000K\u00fd\u0001\u0000\u0000\u0000M\u0100\u0001\u0000"+
		"\u0000\u0000O\u0102\u0001\u0000\u0000\u0000Q\u0104\u0001\u0000\u0000\u0000"+
		"S\u0106\u0001\u0000\u0000\u0000U\u0108\u0001\u0000\u0000\u0000W\u010a"+
		"\u0001\u0000\u0000\u0000Y\u010c\u0001\u0000\u0000\u0000[\u010f\u0001\u0000"+
		"\u0000\u0000]\u0114\u0001\u0000\u0000\u0000_\u011a\u0001\u0000\u0000\u0000"+
		"a\u0121\u0001\u0000\u0000\u0000c\u0129\u0001\u0000\u0000\u0000e\u0131"+
		"\u0001\u0000\u0000\u0000g\u0136\u0001\u0000\u0000\u0000i\u0141\u0001\u0000"+
		"\u0000\u0000kl\u0005;\u0000\u0000l\u0002\u0001\u0000\u0000\u0000mn\u0005"+
		"v\u0000\u0000no\u0005a\u0000\u0000op\u0005r\u0000\u0000p\u0004\u0001\u0000"+
		"\u0000\u0000qr\u0005:\u0000\u0000r\u0006\u0001\u0000\u0000\u0000st\u0005"+
		"i\u0000\u0000tu\u0005n\u0000\u0000uv\u0005t\u0000\u0000vw\u0005e\u0000"+
		"\u0000wx\u0005g\u0000\u0000xy\u0005e\u0000\u0000yz\u0005r\u0000\u0000"+
		"z\b\u0001\u0000\u0000\u0000{|\u0005r\u0000\u0000|}\u0005e\u0000\u0000"+
		"}~\u0005a\u0000\u0000~\u007f\u0005l\u0000\u0000\u007f\n\u0001\u0000\u0000"+
		"\u0000\u0080\u0081\u0005b\u0000\u0000\u0081\u0082\u0005o\u0000\u0000\u0082"+
		"\u0083\u0005o\u0000\u0000\u0083\u0084\u0005l\u0000\u0000\u0084\u0085\u0005"+
		"e\u0000\u0000\u0085\u0086\u0005a\u0000\u0000\u0086\u0087\u0005n\u0000"+
		"\u0000\u0087\f\u0001\u0000\u0000\u0000\u0088\u0089\u0005r\u0000\u0000"+
		"\u0089\u008a\u0005e\u0000\u0000\u008a\u008b\u0005c\u0000\u0000\u008b\u008c"+
		"\u0005o\u0000\u0000\u008c\u008d\u0005r\u0000\u0000\u008d\u008e\u0005d"+
		"\u0000\u0000\u008e\u000e\u0001\u0000\u0000\u0000\u008f\u0090\u0005a\u0000"+
		"\u0000\u0090\u0091\u0005r\u0000\u0000\u0091\u0092\u0005r\u0000\u0000\u0092"+
		"\u0093\u0005a\u0000\u0000\u0093\u0094\u0005y\u0000\u0000\u0094\u0010\u0001"+
		"\u0000\u0000\u0000\u0095\u0096\u0005t\u0000\u0000\u0096\u0097\u0005y\u0000"+
		"\u0000\u0097\u0098\u0005p\u0000\u0000\u0098\u0099\u0005e\u0000\u0000\u0099"+
		"\u0012\u0001\u0000\u0000\u0000\u009a\u009b\u0005i\u0000\u0000\u009b\u009c"+
		"\u0005s\u0000\u0000\u009c\u0014\u0001\u0000\u0000\u0000\u009d\u009e\u0005"+
		"r\u0000\u0000\u009e\u009f\u0005o\u0000\u0000\u009f\u00a0\u0005u\u0000"+
		"\u0000\u00a0\u00a1\u0005t\u0000\u0000\u00a1\u00a2\u0005i\u0000\u0000\u00a2"+
		"\u00a3\u0005n\u0000\u0000\u00a3\u00a4\u0005e\u0000\u0000\u00a4\u0016\u0001"+
		"\u0000\u0000\u0000\u00a5\u00a6\u0005e\u0000\u0000\u00a6\u00a7\u0005n\u0000"+
		"\u0000\u00a7\u00a8\u0005d\u0000\u0000\u00a8\u0018\u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0005(\u0000\u0000\u00aa\u001a\u0001\u0000\u0000\u0000\u00ab"+
		"\u00ac\u0005)\u0000\u0000\u00ac\u001c\u0001\u0000\u0000\u0000\u00ad\u00ae"+
		"\u0005[\u0000\u0000\u00ae\u001e\u0001\u0000\u0000\u0000\u00af\u00b0\u0005"+
		"]\u0000\u0000\u00b0 \u0001\u0000\u0000\u0000\u00b1\u00b2\u0005{\u0000"+
		"\u0000\u00b2\"\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005}\u0000\u0000"+
		"\u00b4$\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005,\u0000\u0000\u00b6&"+
		"\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005w\u0000\u0000\u00b8\u00b9\u0005"+
		"h\u0000\u0000\u00b9\u00ba\u0005i\u0000\u0000\u00ba\u00bb\u0005l\u0000"+
		"\u0000\u00bb\u00bc\u0005e\u0000\u0000\u00bc(\u0001\u0000\u0000\u0000\u00bd"+
		"\u00be\u0005f\u0000\u0000\u00be\u00bf\u0005o\u0000\u0000\u00bf\u00c0\u0005"+
		"r\u0000\u0000\u00c0*\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005f\u0000"+
		"\u0000\u00c2\u00c3\u0005o\u0000\u0000\u00c3\u00c4\u0005r\u0000\u0000\u00c4"+
		"\u00c5\u0005e\u0000\u0000\u00c5\u00c6\u0005a\u0000\u0000\u00c6\u00c7\u0005"+
		"c\u0000\u0000\u00c7\u00c8\u0005h\u0000\u0000\u00c8,\u0001\u0000\u0000"+
		"\u0000\u00c9\u00ca\u0005f\u0000\u0000\u00ca\u00cb\u0005r\u0000\u0000\u00cb"+
		"\u00cc\u0005o\u0000\u0000\u00cc\u00cd\u0005m\u0000\u0000\u00cd.\u0001"+
		"\u0000\u0000\u0000\u00ce\u00cf\u0005l\u0000\u0000\u00cf\u00d0\u0005o\u0000"+
		"\u0000\u00d0\u00d1\u0005o\u0000\u0000\u00d1\u00d2\u0005p\u0000\u0000\u00d2"+
		"0\u0001\u0000\u0000\u0000\u00d3\u00d4\u0005i\u0000\u0000\u00d4\u00d5\u0005"+
		"n\u0000\u0000\u00d52\u0001\u0000\u0000\u0000\u00d6\u00d7\u0005.\u0000"+
		"\u0000\u00d7\u00d8\u0005.\u0000\u0000\u00d84\u0001\u0000\u0000\u0000\u00d9"+
		"\u00da\u0005i\u0000\u0000\u00da\u00db\u0005f\u0000\u0000\u00db6\u0001"+
		"\u0000\u0000\u0000\u00dc\u00dd\u0005t\u0000\u0000\u00dd\u00de\u0005h\u0000"+
		"\u0000\u00de\u00df\u0005e\u0000\u0000\u00df\u00e0\u0005n\u0000\u0000\u00e0"+
		"8\u0001\u0000\u0000\u0000\u00e1\u00e2\u0005e\u0000\u0000\u00e2\u00e3\u0005"+
		"l\u0000\u0000\u00e3\u00e4\u0005s\u0000\u0000\u00e4\u00e5\u0005e\u0000"+
		"\u0000\u00e5:\u0001\u0000\u0000\u0000\u00e6\u00e7\u0005a\u0000\u0000\u00e7"+
		"\u00e8\u0005n\u0000\u0000\u00e8\u00e9\u0005d\u0000\u0000\u00e9<\u0001"+
		"\u0000\u0000\u0000\u00ea\u00eb\u0005o\u0000\u0000\u00eb\u00ec\u0005r\u0000"+
		"\u0000\u00ec>\u0001\u0000\u0000\u0000\u00ed\u00ee\u0005x\u0000\u0000\u00ee"+
		"\u00ef\u0005o\u0000\u0000\u00ef\u00f0\u0005r\u0000\u0000\u00f0@\u0001"+
		"\u0000\u0000\u0000\u00f1\u00f2\u0005<\u0000\u0000\u00f2B\u0001\u0000\u0000"+
		"\u0000\u00f3\u00f4\u0005<\u0000\u0000\u00f4\u00f5\u0005=\u0000\u0000\u00f5"+
		"D\u0001\u0000\u0000\u0000\u00f6\u00f7\u0005>\u0000\u0000\u00f7F\u0001"+
		"\u0000\u0000\u0000\u00f8\u00f9\u0005>\u0000\u0000\u00f9\u00fa\u0005=\u0000"+
		"\u0000\u00faH\u0001\u0000\u0000\u0000\u00fb\u00fc\u0005=\u0000\u0000\u00fc"+
		"J\u0001\u0000\u0000\u0000\u00fd\u00fe\u0005/\u0000\u0000\u00fe\u00ff\u0005"+
		"=\u0000\u0000\u00ffL\u0001\u0000\u0000\u0000\u0100\u0101\u0005+\u0000"+
		"\u0000\u0101N\u0001\u0000\u0000\u0000\u0102\u0103\u0005-\u0000\u0000\u0103"+
		"P\u0001\u0000\u0000\u0000\u0104\u0105\u0005*\u0000\u0000\u0105R\u0001"+
		"\u0000\u0000\u0000\u0106\u0107\u0005/\u0000\u0000\u0107T\u0001\u0000\u0000"+
		"\u0000\u0108\u0109\u0005%\u0000\u0000\u0109V\u0001\u0000\u0000\u0000\u010a"+
		"\u010b\u0005.\u0000\u0000\u010bX\u0001\u0000\u0000\u0000\u010c\u010d\u0005"+
		":\u0000\u0000\u010d\u010e\u0005=\u0000\u0000\u010eZ\u0001\u0000\u0000"+
		"\u0000\u010f\u0110\u0005t\u0000\u0000\u0110\u0111\u0005r\u0000\u0000\u0111"+
		"\u0112\u0005u\u0000\u0000\u0112\u0113\u0005e\u0000\u0000\u0113\\\u0001"+
		"\u0000\u0000\u0000\u0114\u0115\u0005f\u0000\u0000\u0115\u0116\u0005a\u0000"+
		"\u0000\u0116\u0117\u0005l\u0000\u0000\u0117\u0118\u0005s\u0000\u0000\u0118"+
		"\u0119\u0005e\u0000\u0000\u0119^\u0001\u0000\u0000\u0000\u011a\u011b\u0005"+
		"r\u0000\u0000\u011b\u011c\u0005e\u0000\u0000\u011c\u011d\u0005t\u0000"+
		"\u0000\u011d\u011e\u0005u\u0000\u0000\u011e\u011f\u0005r\u0000\u0000\u011f"+
		"\u0120\u0005n\u0000\u0000\u0120`\u0001\u0000\u0000\u0000\u0121\u0122\u0005"+
		"r\u0000\u0000\u0122\u0123\u0005e\u0000\u0000\u0123\u0124\u0005v\u0000"+
		"\u0000\u0124\u0125\u0005e\u0000\u0000\u0125\u0126\u0005r\u0000\u0000\u0126"+
		"\u0127\u0005s\u0000\u0000\u0127\u0128\u0005e\u0000\u0000\u0128b\u0001"+
		"\u0000\u0000\u0000\u0129\u012d\u0007\u0000\u0000\u0000\u012a\u012c\u0007"+
		"\u0001\u0000\u0000\u012b\u012a\u0001\u0000\u0000\u0000\u012c\u012f\u0001"+
		"\u0000\u0000\u0000\u012d\u012b\u0001\u0000\u0000\u0000\u012d\u012e\u0001"+
		"\u0000\u0000\u0000\u012ed\u0001\u0000\u0000\u0000\u012f\u012d\u0001\u0000"+
		"\u0000\u0000\u0130\u0132\u0007\u0002\u0000\u0000\u0131\u0130\u0001\u0000"+
		"\u0000\u0000\u0132\u0133\u0001\u0000\u0000\u0000\u0133\u0131\u0001\u0000"+
		"\u0000\u0000\u0133\u0134\u0001\u0000\u0000\u0000\u0134f\u0001\u0000\u0000"+
		"\u0000\u0135\u0137\u0007\u0002\u0000\u0000\u0136\u0135\u0001\u0000\u0000"+
		"\u0000\u0137\u0138\u0001\u0000\u0000\u0000\u0138\u0136\u0001\u0000\u0000"+
		"\u0000\u0138\u0139\u0001\u0000\u0000\u0000\u0139\u013a\u0001\u0000\u0000"+
		"\u0000\u013a\u013c\u0007\u0003\u0000\u0000\u013b\u013d\u0007\u0002\u0000"+
		"\u0000\u013c\u013b\u0001\u0000\u0000\u0000\u013d\u013e\u0001\u0000\u0000"+
		"\u0000\u013e\u013c\u0001\u0000\u0000\u0000\u013e\u013f\u0001\u0000\u0000"+
		"\u0000\u013fh\u0001\u0000\u0000\u0000\u0140\u0142\u0007\u0004\u0000\u0000"+
		"\u0141\u0140\u0001\u0000\u0000\u0000\u0142\u0143\u0001\u0000\u0000\u0000"+
		"\u0143\u0141\u0001\u0000\u0000\u0000\u0143\u0144\u0001\u0000\u0000\u0000"+
		"\u0144\u0145\u0001\u0000\u0000\u0000\u0145\u0146\u00064\u0000\u0000\u0146"+
		"j\u0001\u0000\u0000\u0000\u0006\u0000\u012d\u0133\u0138\u013e\u0143\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}